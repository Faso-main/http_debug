from Main import data



hashmap = []

def check_vulnerabilities(entry):
    issues = []
    
    # старые протоколы
    if 'TLSv1.0' in entry.get('request', {}).get('header', '') or \
       'TLSv1.1' in entry.get('request', {}).get('header', ''):
        issues.append("Устаревшая версия TLS (1.0/1.1)")
    
    # sql insersions
    sql_keywords = ['union select', 'select *', 'insert into', 'drop table', '1=1']
    if any(keyword in entry.get('url', '').lower() for keyword in sql_keywords):
        issues.append("Возможная SQL-инъекция в URL")
    
    # xss слабость
    xss_patterns = ['<script>', 'javascript:', 'onload=', 'onerror=']
    if any(pattern in entry.get('url', '').lower() for pattern in xss_patterns):
        issues.append("Возможная XSS-атака в параметрах URL")
    
    # личные данные
    sensitive_params = ['password', 'token', 'secret', 'api_key']
    if any(param in entry.get('request', {}).get('header', '').lower() for param in sensitive_params):
        issues.append("Передача чувствительных данных")
    
    # api
    vulnerable_endpoints = ['/admin/', '/wp-admin/', '/api/v1/login']
    if any(endpoint in entry.get('url', '') for endpoint in vulnerable_endpoints):
        issues.append("Обращение к потенциально уязвимому эндпоинту")
    
    return issues

for entry in data:
    issues = check_vulnerabilities(entry)
    if issues:
        hashmap.append({
            'id': entry.get('id'),
            'url': entry.get('url'),
            'issues': issues
        })

if hashmap:
    print("Найдены потенциальные уязвимости:")
    for vuln in hashmap:
        print(f"\nID: {vuln['id']}")
        print(f"URL: {vuln['url']}")
        print("Проблемы:", ", ".join(vuln['issues']))
else:
    print("Потенциальных уязвимостей не обнаружено")